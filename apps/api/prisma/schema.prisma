// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Sample {
  id        Int      @id @default(autoincrement())
  name      String
  code      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("samples") // if you want to use snake_case format
}

model User {
  id             Int           @id @default(autoincrement())
  first_name     String
  last_name      String
  username       String        @unique
  password       String
  email          String        @unique
  contact        String
  address        String
  codeReferall   String
  updatedAt      DateTime      @updatedAt
  createdAt      DateTime      @default(now())
  roleId         Int // Assuming a foreign key to Role table
  Voucher        Voucher[]
  MyVoucher      MyVoucher[]
  Role           Role          @relation(fields: [roleId], references: [id])
  UserReferall   UserReferall? @relation(fields: [userReferallId], references: [id])
  userReferallId Int?
}

model Role {
  id        Int      @id @default(autoincrement())
  roleName  String
  users     User[]
  createdAt DateTime @default(now())
}

model UserReferall {
  id         Int      @id @default(autoincrement())
  referallid Int
  users      User[]
  createdAt  DateTime @default(now())
}

model Voucher {
  id                 Int      @id @default(autoincrement())
  nameVoucher        String
  eventId            Int
  userId             Int
  discountPercentage Float
  startDate          DateTime
  endDate            DateTime

  // Relationships
  user      User        @relation(fields: [userId], references: [id])
  MyVoucher MyVoucher[]
}

model ClaimVoucher {
  id              Int      @id @default(autoincrement())
  transactionDate DateTime
  myVoucherId     Int

  // Relationships
  myVoucher MyVoucher @relation(fields: [myVoucherId], references: [id])
}

model MyVoucher {
  id          Int      @id @default(autoincrement())
  voucherId   Int
  userId      Int
  expiredDate DateTime

  // Relationships
  voucher      Voucher        @relation(fields: [voucherId], references: [id])
  user         User           @relation(fields: [userId], references: [id])
  ClaimVoucher ClaimVoucher[]
}

model Prize {
  id     Int    @id @default(autoincrement())
  name   String
  points Int
}
